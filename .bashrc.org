#+TITLE: .Bashrc
#+DESCRIPTION: A Post-installation script for my .bashrc file
#+AUTHOR: Tolemariam Fufa Teso
#+PROPERTY: header-args :tangle ~/.bashrc
#+auto_tangle: t
#+STARTUP: showeverything


* Bashrc Configuration :toc:

 ~/.bashrc: executed by bash(1) for non-login shells.
 see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
 for examples
 If not running interactively, don't do anything
 
#+begin_src bash
case $- in
*i*) ;;
*) return ;;
esac 
#+end_src

don't put duplicate lines or lines starting with space in the history.
See bash(1) for more options
#+begin_src bash 
HISTCONTROL=ignoreboth
#+end_src

append to the history file, don't overwrite it
#+begin_src bash  

shopt -s histappend
#+end_src

for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
#+begin_src bash

HISTSIZE=1000
HISTFILESIZE=2000
#+end_src

check the window size after each command and, if necessary,
update the values of LINES and COLUMNS.
#+begin_src bash
shopt -s checkwinsize
#+end_src

 If set, the pattern "**" used in a pathname expansion context will
match all files and zero or more directories and subdirectories.
#+begin_src bash
#shopt -s globstar
#+end_src

make less more friendly for non-text input files, see lesspipe(1)
#+begin_src bash
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"
#+end_src

set variable identifying the chroot you work in (used in the prompt below)
#+begin_src bash
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
	debian_chroot=$(cat /etc/debian_chroot)
fi
#+end_src

 set a fancy prompt (non-color, unless we know we "want" color)
 #+begin_src bash

case "$TERM" in
xterm-color | *-256color) color_prompt=yes ;;
esac

#+end_src

uncomment for a colored prompt, if the terminal has the capability; turned
off by default to not distract the user: the focus in a terminal window
should be on the output of commands, not on the prompt
#+begin_src bash

#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
	if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
		# We have color support; assume it's compliant with Ecma-48
		# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
		# a case would tend to support setf rather than setaf.)
		color_prompt=yes
	else
		color_prompt=
	fi
fi

if [ "$color_prompt" = yes ]; then
	PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
	PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt
 
#+end_src

If this is an xterm set the title to user@host:dir
#+begin_src bash

case "$TERM" in
xterm* | rxvt*)
	PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
	;;
*) ;;
esac
 
#+end_src

# enable color support of ls and also add handy aliases
#+begin_src bash

if [ -x /usr/bin/dircolors ]; then
	test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
	alias ls='ls --color=auto'
	#alias dir='dir --color=auto'
	#alias vdir='vdir --color=auto'

	alias grep='grep --color=auto'
	alias fgrep='fgrep --color=auto'
	alias egrep='egrep --color=auto'
fi

#+end_src

colored GCC warnings and errors
#+begin_src bash


#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

#+end_src

some more ls aliases
#+begin_src bash

alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

#+end_src

Add an "alert" alias for long running commands.  Use like so:
 sleep 10; alert
#+begin_src bash

alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

#+end_src

Alias definitions.
You may want to put all your additions into a separate file like
~/.bash_aliases, instead of adding them here directly.
See /usr/share/doc/bash-doc/examples in the bash-doc package.
#+begin_src bash

if [ -f ~/.bash_aliases ]; then
	. ~/.bash_aliases
fi

#+end_src

enable programmable completion features (you don't need to enable
this, if it's already enabled in /etc/bash.bashrc and /etc/profile
sources /etc/bash.bashrc).
#+begin_src bash


  if ! shopt -oq posix; then
          if [ -f /usr/share/bash-completion/bash_completion ]; then
                  . /usr/share/bash-completion/bash_completion
          elif [ -f /etc/bash_completion ]; then
                  . /etc/bash_completion
          fi
  fi
 
#+end_src

  cargo
  
  #+begin_src bash

  . "$HOME/.cargo/env"

  export PATH="$PATH:$HOME/. cargo/bin"
#+end_src

  bash_completion
  
  #+begin_src bash


  bind 'set show-all-if-ambiguous on'
  bind 'TAB:menu-complete'

#+end_src

 >>> conda initialize >>>
!! Contents within this block are managed by 'conda init' !!
#+begin_src bash

__conda_setup="$('/home/to/miniconda3/bin/conda' 'shell.bash' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/home/to/miniconda3/etc/profile.d/conda.sh" ]; then
        . "/home/to/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="/home/to/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup

#+end_src

 <<< conda initialize <<<

   flatpak
#+begin_src bash
   

   alias wezterm='flatpak run org.wezfurlong.wezterm'
   # [...]
#+end_src

zoxide
#+begin_src bash
eval "$(zoxide init bash)" 
#+end_src

#+begin_src bash
neofetch
#+end_src


